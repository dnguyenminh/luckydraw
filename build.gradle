plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.flywaydb.flyway' version '9.16.0'
}

group = 'vn.com.fecredit'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    all {
        exclude group: 'commons-logging', module: 'commons-logging'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation ('org.springframework.boot:spring-boot-starter-data-jpa') {
        exclude group: 'org.apache.tomcat', module: 'tomcat-jdbc'
    }
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Database
    implementation 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'
    
    // Connection Pool
    implementation 'com.zaxxer:HikariCP'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // OpenAPI Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // CSV Processing
    implementation 'com.opencsv:opencsv:5.9'

    // Model Mapper
    implementation 'org.modelmapper:modelmapper:3.2.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Test Dependencies
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'com.vaadin.external.google', module: 'android-json'
    }
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    
    // Testcontainers
    testImplementation platform('org.testcontainers:testcontainers-bom:1.19.3')
    testImplementation 'org.testcontainers:junit-jupiter'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat = 'full'
        showStandardStreams = true
    }
}

flyway {
    // Replace the URL, user, and password with your database connection details.

    def profile = System.getProperty('spring.profiles.active') ?: 'unknown'
    def prefixDBName = "${profile}" == ""? "" : "${profile}_"
    def dbName = "${prefixDBName}lucky_draw"
    url="jdbc:postgresql://localhost:5432/${dbName}"
    user = 'postgres'
    password='postgres'
    schemas = ['public']
    def cleanDisabledProp = project.findProperty('flyway.cleanDisabled') ?: 'false'
    cleanDisabled = cleanDisabledProp.toBoolean()
    baselineOnMigrate = true
}